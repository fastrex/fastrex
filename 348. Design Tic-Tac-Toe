class Solution {
    struct Comp
    {
        bool operator ()(const std::pair<const int, int>& val1, const std::pair<const int, int>& val2) const
        {
            return val1.second < val2.second;
        }
    };
public:
    vector<int> topKFrequent(vector<int>& nums, int k)
    {
        vector<int> retVal;
        retVal.reserve(k);
        std::unordered_map<int, int> solMap;
        for (auto& item : nums)        
            ++solMap[item];        

        std::priority_queue<std::pair<int, int>, std::vector<std::pair<int, int>>, Comp> solQue(solMap.begin(), solMap.end());       
        for (size_t i = 0; i < k; i++)
        {
           retVal.push_back(solQue.top().first);
           solQue.pop();
        }
        return retVal;
    }
};
