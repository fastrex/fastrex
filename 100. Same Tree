class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q)
    {
        std::queue<TreeNode*> que1;       
        std::queue<TreeNode*> que2;
        if  (p)     
            que1.push(p);
        if (q)
            que2.push(q);
        TreeNode* node1, * node2;
        while (!que1.empty() && !que2.empty())
        {
            node1 = que1.front();
            node2 = que2.front();
            que1.pop();
            que2.pop();
            if (node1->val != node2->val || ((bool)node1->left ^ (bool)node2->left) || ((bool)node1->right ^ (bool)node2->right))
            {
                return false;
            }
            if (node1->left)
            {
                que1.push(node1->left);
                que2.push(node2->left);
            }
            if (node1->right)
            {
                que1.push(node1->right);
                que2.push(node2->right);
            }
        }
        return que1.empty() && que2.empty() ? true : false;
    }
};
