class Solution {
    int columnCount = 0;
public:
    int numIslands(vector<vector<char>>& grid) {
        
        int retVal = 0;
        for (int i = 0; i < grid.size(); i++)
        {
            auto& row = grid[i];
            for (int j = 0; j < row.size(); j++)
            {
                if (row[j] == '1')
                {
                    check(grid, i, j);
                    retVal++;
                }
            }
        }
        return retVal;
    }

   void check(vector<vector<char>>& grid, const int& i, const int& j)
   {
        if (i < 0 || i > grid.size() - 1 || j < 0 || j > grid[0].size() - 1)
            return;

        if (grid[i][j] == '1')
        {
            grid[i][j] = '2';
        }
        else
        {
            return;
        }
        check(grid, i - 1, j);
        check(grid, i, j - 1);
        check(grid, i + 1, j);
        check(grid, i, j + 1);
   }
};
