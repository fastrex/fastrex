class Solution {
public:
    int search(vector<int>& nums, int target) {
        int lo = 0, mid;
        int hi = nums.size() - 1;
        while (lo + 1 < hi)
        {
            mid = lo + (hi - lo) / 2;
            //one of the parts is ordered
            if (nums[lo] < nums[mid]) // 
            {
                if (check(nums[lo], target, nums[mid]))
                {
                    hi = mid;
                }
                else
                {
                    lo = mid;
                }
            }
            else
            {
                if (check(nums[mid], target, nums[hi]))
                {
                    lo = mid;                   
                }
                else
                {
                    hi = mid;
                }
            }
        }
        if (nums[lo] == target)
        {
            return lo;
        }
        else if (nums[hi] == target)
        {
            return hi;
        }
        return -1;
    }
      
    bool check(const int& left, const int& target, const int& right)
    {
        return left <= target && target <= right;
    }
};
